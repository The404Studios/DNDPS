// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: _Defins.proto

using Google.Protobuf;
using Google.Protobuf.Reflection;

public static class RegistyProto
{
    private static readonly byte[] descriptorData = {
        // The serialized descriptor data
        0x0a, 0x0d, 0x5f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 
        0x11, 0x44, 0x43, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 
        0x65, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x41, 0x63, 
        0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x0a, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 
        0x65, 0x78, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 
        0x03, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x58, 0x10, 0x14, 0x22, 
        0x30, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 
        0x11, 0x0a, 0x0d, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 
        0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x10, 
        0x01, 0x22, 0x43, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 
        0x0a, 0x0f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 
        0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x08, 
        0x0a, 0x04, 0x45, 0x50, 0x49, 0x43, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x52, 0x4f, 0x4e, 
        0x4d, 0x41, 0x43, 0x45, 0x10, 0x03, 0x22, 0x68, 0x0a, 0x10, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 
        0x5f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x0e, 0x4c, 0x65, 
        0x6e, 0x67, 0x74, 0x68, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x08, 0x0a, 0x04, 
        0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 
        0x07, 0x0a, 0x03, 0x4d, 0x41, 0x58, 0x10, 0x14, 0x22, 0x26, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 
        0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 
        0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x08, 
        0x22, 0x9e, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x50, 0x61, 0x72, 0x74, 
        0x79, 0x22, 0x2e, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 
        0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 
        0x07, 0x0a, 0x03, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x58, 0x10, 
        0x14, 0x22, 0x1d, 0x0a, 0x05, 0x53, 0x65, 0x72, 0x69, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 
        0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 
        0x4d, 0x41, 0x58, 0x10, 0x14, 0x22, 0x34, 0x0a, 0x05, 0x50, 0x65, 0x74, 0x69, 0x74, 0x12, 0x0e, 
        0x0a, 0x0a, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x50, 0x45, 0x54, 0x49, 0x54, 0x10, 0x00, 0x12, 0x0c, 
        0x0a, 0x08, 0x4d, 0x41, 0x58, 0x5f, 0x50, 0x45, 0x54, 0x49, 0x54, 0x10, 0x01, 0x22, 0x3a, 0x0a, 
        0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 
        0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x58, 0x5f, 
        0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x22, 0x4d, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 
        0x79, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x4e, 0x45, 
        0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x08, 0x4d, 0x41, 0x58, 
        0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01
    };

    public static readonly DescriptorDescriptor Descriptor = FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData, new FileDescriptor[0]);

    public static void RegisterAllExtensions(ExtensionRegistry registry)
    {
        // This method is not needed for the C# code.
    }
}
